
# Build an image that can serve mlflow models.
FROM ubuntu:18.04

RUN apt-get -y update && apt-get install -y --no-install-recommends          wget          curl          nginx          ca-certificates          bzip2          build-essential          cmake          openjdk-8-jdk          git-core          maven     && rm -rf /var/lib/apt/lists/*

# Download and setup miniconda
RUN curl -L https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh >> miniconda.sh
RUN bash ./miniconda.sh -b -p /miniconda && rm ./miniconda.sh
ENV PATH="/miniconda/bin:$PATH"
ENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
ENV GUNICORN_CMD_ARGS="--timeout 60 -k gevent"
# Set up the program in the image
WORKDIR /opt/mlflow

COPY mlflow-project /opt/mlflow
RUN pip install /opt/mlflow
RUN cd /opt/mlflow/mlflow/java/scoring && mvn --batch-mode package -DskipTests && mkdir -p /opt/java/jars && mv /opt/mlflow/mlflow/java/scoring/target/mlflow-scoring-*-with-dependencies.jar /opt/java/jars



                COPY model_dir/model.onnx /opt/ml/model
                RUN python -c                 'from mlflow.models.container import _install_pyfunc_deps;                _install_pyfunc_deps(                    "/opt/ml/model",                     install_mlflow=False,                     enable_mlserver=False)'
                ENV MLFLOW_DISABLE_ENV_CREATION="true"
                ENV ENABLE_MLSERVER=False
                
ENTRYPOINT ["python", "-c", "from mlflow.models import container as C; C._serve()"]
